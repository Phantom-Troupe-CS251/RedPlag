class v : def __ v __( v , v ): v _ v = v . v (' - ') v = v _ v [ 0 ]. v (',') v . v = v ( v [ 0 ]) v . v = v ( v [ 1 ]) v . v = v ( v [ 2 ]) v . v =[] v = v _ v [ 1 ] v = v . v ('/') v . v . v ( v ( v [ 2 ])) v . v . v ( v ( v [ 1 ])) v . v . v ( v ( v [ 0 ])) def __ v __( v , v ): v = v . v v = v . v if v [ 0 ] < v [ 0 ]: return - 1 elif v [ 0 ] == v [ 0 ]: if v [ 1 ] < v [ 1 ]: return - 1 elif v [ 1 ]== v [ 1 ]: if v [ 2 ] > v [ 2 ]: return (((( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )+(( v . v - v . v )** 2 ))**. 5 ) else : return - 1 else : return (((( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )+(( v . v - v . v )** 2 ))**. 5 ) else : return (((( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )+(( v . v - v . v )** 2 ))**. 5 ) def __ v __( v ): v = v . v return ' v : ({ 0 }, { 1 }, { 2 }) v : ({ 3 }, { 4 }, { 5 })'. v ( v . v , v . v , v . v , v [ 0 ], v [ 1 ], v [ 2 ]) v = v () v = v ( v ) v = v ( v ()) v = [] v = [] v =- 1 for v in v ( v ): v = v () v . v ( v ) for v in v : v = v ( v ) v ( v ) if ( v - v ) == - 1 : continue else : if v ==- 1 : v = v - v v = v elif ( v - v ) < v : v = v - v v = v if v ==- 1 : v (' v \' v v v v v ') else : v (' v v is :') v ( v ) 