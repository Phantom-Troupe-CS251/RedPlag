import v class v : def __ v __( v ): v = v () v = v . v (' - ') v = v [ 0 ]. v (',') v = v [ 1 ]. v ('/') v . v = v ( v [ 0 ]) v . v = v ( v [ 1 ]) v . v = v ( v [ 2 ]) v . v =( v ( v [ 2 ]), v ( v [ 1 ]), v ( v [ 0 ])) def __ v __( v , v ): if v . v [ 0 ]> v . v [ 0 ] or ( v . v [ 0 ]== v . v [ 0 ] and v . v [ 1 ]> v . v [ 1 ]) or ( v . v [ 0 ]== v . v [ 0 ] and v . v [ 1 ]== v . v [ 1 ] and v . v [ 2 ]> v . v [ 2 ]): return v . v (( v . v - v . v )** 2 +( v . v - v . v )** 2 +( v . v - v . v )** 2 ) else : return - 1 def __ v __( v ): v =' v : ('+ v ( v . v )+', '+ v ( v . v )+', '+ v ( v . v )+') v : ('+ v ( v . v [ 0 ])+', '+ v ( v . v [ 1 ])+', '+ v ( v . v [ 2 ])+')' return v v = v () v = v ( v ()) v _ v =[] v _ v =- 1 v _ v =- 1 for v in v ( v ): v _ v . v ( v ()) v = v _ v [ v ]- v if ( v < v _ v or v _ v ==- 1 ) and v !=- 1 : v _ v = v v _ v = v for v in v ( v ): v ( v ( v _ v [ v ])) if v _ v !=- 1 : v (' v v is :') v ( v ( v _ v [ v _ v ])) else : v (" v ' v v v v v ") 