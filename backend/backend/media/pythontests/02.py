class v : def __ v __( v , v ): v , v = v . v (' - ') v = v . v (' ','') v = v . v (',') v = v . v (' ',''). v ('/') v =[ v ( v ) for v in v ] v = v [::- 1 ] v = v ( v ) v . v = v ( v [ 0 ]) v . v = v ( v [ 1 ]) v . v = v ( v [ 2 ]) v . v = v def __ v __( v , v ): if ( v . v [ 0 ]> v . v [ 0 ]): return - 1 elif ( v . v [ 0 ]== v . v [ 0 ]): if ( v . v [ 1 ]> v . v [ 1 ]): return - 1 elif ( v . v [ 1 ]== v . v [ 1 ]): if ( v . v [ 2 ]>= v . v [ 2 ]): return - 1 else : import v return v . v ((( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )) else : import v return v . v ((( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )) else : import v return v . v ((( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )+(( v . v - v . v )** 2 )) def __ v __( v ): v (' v :', v ([ v . v , v . v , v . v ]),' v :', v . v ) v = v () v = v ( v ()) v = v ( v ) v =[] for v in v ( v ): v = v () v . v ( v ) v =[] for v in v ( v ): v = v ( v [ v ]) v . v ( v ) [ v .__ v __() for v in v ] v =[( v - v ) for v in v ] def no ( v ): v = 0 for v in v : if v == - 1 : v += 1 return v def posOfmin ( v ): v = 1000000 for v in v : if v < v and v != - 1 : v = v for v in v ( v ): if v [ v ] == v : return v if no ( v ) == v : v (" v ' v v v v v ") else : v (" v v is :") v [ posOfmin ( v )].__ v __() 