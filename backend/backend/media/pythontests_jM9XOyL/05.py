class v : def __ v __( v , v ): v = v . v (" - ") v = v [ 0 ]. v (",") v = v [ 1 ]. v ("/") v . v = [] v . v . v ( v ( v [ 2 ])) v . v . v ( v ( v [ 1 ])) v . v . v ( v ( v [ 0 ])) v . v = v ( v [ 0 ]) v . v = v ( v [ 1 ]) v . v = v ( v [ 2 ]) def __ v __( v ): v = " v : ("+ v ( v . v )+", "+ v ( v . v )+", "+ v ( v . v )+") v : ("+ v ( v . v [ 0 ])+", "+ v ( v . v [ 1 ])+", "+ v ( v . v [ 2 ])+")" return v def __ v __( v , v ): if ( v . v [ 0 ] > v . v [ 0 ]): return - 1 if ( v . v [ 0 ] == v . v [ 0 ]) and ( v . v [ 1 ] > v . v [ 1 ]): return - 1 if ( v . v [ 0 ] == v . v [ 0 ]) and ( v . v [ 1 ] == v . v [ 1 ]) and ( v . v [ 2 ] >= v . v [ 2 ]): return - 1 v = ( v . v - v . v )** 2 v = ( v . v - v . v )** 2 v = ( v . v - v . v )** 2 return ( v + v + v )**( 1 / 2 ) v = v () v = v ( v ) v = v ( v ()) v = [] for v in v ( v ): v = v () v = v ( v ) v . v ( v ) v = 0 v _ v = [] for v in v : v ( v ) if ( v - v != - 1 ): v = v + 1 v _ v . v ( v ) if ( v == 0 ): v (" v ' v v v v v ") v () v = v _ v [ 0 ] v = v - v _ v [ 0 ] for v in v _ v : v = v if ( v - v < v ): v = v v = v - v v (" v v is :") v ( v ) 