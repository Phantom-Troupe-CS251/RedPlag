import v class v : def __ v __( v , v ): v = v . v (" - ") v = v ( v ( v , v [ 0 ]. v (','))) v = v ( v ( v , v ( v [ 1 ]. v ('/')))) v . v = v v . v = v [ 0 ] v . v = v [ 1 ] v . v = v [ 2 ] def __ v __( v , v ): if v . v < v . v : v _ v = v . v - v . v v _ v = v . v - v . v v _ v = v . v - v . v return v . v ( v _ v ** 2 + v _ v ** 2 + v _ v ** 2 ) else : return - 1 def __ v __( v ): return " v : (" + v ( v . v ) + ", " + v ( v . v ) + ", " + v ( v . v ) + ") v : " + v ( v . v ) v = v ( v ()) v = v ( v ()) v _ v = - 1 v = - 1 v = [] for v in v ( v ): v = v ( v ()) v . v ( v ) if v _ v == - 1 and v - v != - 1 : v _ v = v - v v = v else : if v - v != - 1 : if v - v < v _ v : v _ v = v - v v = v for v in v : v ( v ) if v _ v == - 1 : v (" v ' v v v v v ") else : v (" v v is : ") v ( v ) 