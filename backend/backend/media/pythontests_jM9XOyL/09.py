import v def compare ( v , v ): for v in v ( v ( 3 )): if ( v [ v ]> v [ v ]): return True return False class v : def __ v __( v , v ): [ v , v , v ]= v . v (" ") [ v . v , v . v , v . v ]=[ v ( v ) for v in v . v (",")] v . v =[ v ( v ) for v in v . v ("/")] def v ( v , v ): return v . v ((( v . v - v . v )** 2 +( v . v - v . v )** 2 +( v . v - v . v )** 2 )) def __ v __( v , v ): for v in v ( v ( 3 )): if ( v [ v ]> v [ v ]): return True return False return v . v ( v ) else : return - 1 def __ v __( v ): return " v : ("+ v ( v . v )+","+ v ( v . v )+","+ v ( v . v )+") v : ("+ v ( v . v [ 2 ])+","+ v ( v . v [ 1 ])+","+ v ( v . v [ 0 ])+")" v = v ( v ()) v _ v = v ( v ) v = v ( v ()) v _ v _ v =[] v _ v =- 1 v = v _ v for v in v ( v ): v = v ( v ()) v = v ( v ) v _ v _ v . v ( v ) v = v _ v - v if v !=- 1 : if v < v _ v or v _ v ==- 1 : v _ v = v v = v for v in v _ v _ v : v ( v ) if v _ v ==- 1 : v (" v ' v v v v v ") else : v (" v v is :") v ( v ) 